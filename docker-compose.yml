version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - migrate
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/warehouse
      - LOG_LEVEL=info
      - HTTP_PORT=:8080
    volumes:
      - ./docs/swagger:/root/docs/swagger
    restart: on-failure
    networks:
      - warehouse_network

  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=warehouse
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - warehouse_network

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://postgres:postgres@postgres:5432/warehouse?sslmode=disable", "up" ]
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure
    networks:
      - warehouse_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpass
    ports:
      - "8588:80"
    networks:
      - warehouse_network

volumes:
  postgres_data:


networks:
  warehouse_network:
    driver: bridge
